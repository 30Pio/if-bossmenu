import { useEffect, useState } from "react";
import { useBossmenu } from "../store/appStore";
import { fetchNui } from "../utils/fetchNui";
import { BarChart } from "@mantine/charts";
import { notifications } from "@mantine/notifications";
import { ScrollArea } from "@mantine/core";
import { BackgroundImage } from "@mantine/core";

export default function Main() {
  const [location, employeeData, billdata, setLocation, setBilldata] =
    useBossmenu((state) => [
      state.location,
      state.employeeData,
      state.billdata,
      state.setLocation,
      state.setBillData,
    ]);
  const [data, setData] = useState<any>([]);
  const transformData = (timestamps: any) => {
    const timestampss = JSON.parse(timestamps.data);
    const transformedData = timestampss.map((timestamp: any) => ({
      month: timestamp.time,
      Count: timestamp.jobcount,
    }));
    setData(transformedData.slice(0, 15));
  };
  const [ranks, setRanks] = useState([]);
  const [manager, setManager] = useState<any>({});
  const [empSource, setEmpSource] = useState<any>("");
  const [jobdata, setJobData] = useState<any>([]);
  const [hjob, setHjob] = useState<any>({});
  const [secdoary, setSecondary] = useState<any>([]);
  const fetchRanks = async (das: any) => {
    try {
      await fetchNui("GetCurrentJobranks", "ok").then((data: any) => {
        setRanks(data);
      });
      setManager(das);
    } catch (error) {
      console.error("Error fetching ranks:", error);
    }
  };
  const fetchApplications = async () => {
    try {
      await fetchNui("getApplicationOfjob", "ok").then((data: any) => {
        setJobData(data);
      });
    } catch (error) {
      console.error("Error fetching applications:", error);
    }
  };
  return (
    <div className="Main">
      {location === "" ? (
        <>
          <div
            style={{
              width: "25%",
              height: "100%",
              background:
                "linear-gradient(146.2deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.1) 100%)",
              marginRight: "3%",
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              justifyContent: "space-around",
            }}
          >
            <div className="title">EMPLOYEES</div>
            <div className="Icon">
              <svg
                style={{ width: "7.083vw", height: "9.259vh" }}
                viewBox="0 0 136 100"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M59.3926 1.65164C60.2415 1.33906 61.7694 0.827573 62.788 0.543411C64.0047 0.202417 65.6741 0.0319203 67.6548 0.00350417C69.8618 -0.024912 71.2766 0.117169 72.7479 0.514995C73.8797 0.827573 75.5209 1.33906 76.3697 1.65164C77.2186 1.96422 78.9163 2.87354 80.1047 3.66919C81.3214 4.43643 83.0191 5.82882 83.9245 6.70972C84.8017 7.61904 86.1315 9.32401 86.8955 10.4891C87.6595 11.6541 88.5366 13.3307 88.8479 14.1832C89.1591 15.0357 89.6401 16.5133 89.8948 17.451C90.206 18.6161 90.3758 20.2926 90.3758 22.708C90.3758 25.1234 90.206 26.8 89.8948 27.965C89.6401 28.9027 89.1591 30.3804 88.8479 31.2329C88.5366 32.0854 87.6595 33.7619 86.8955 34.927C86.1315 36.092 84.7734 37.8254 83.8396 38.7347C82.9342 39.6725 81.2082 41.0365 80.0481 41.8037C78.888 42.5709 77.2186 43.4518 76.3697 43.7644C75.5209 44.077 74.0495 44.5601 73.1158 44.8158C71.9557 45.1284 70.2862 45.2989 67.8812 45.2989C65.4761 45.2989 63.8067 45.1284 62.6466 44.8158C61.7128 44.5601 60.2415 44.077 59.3926 43.7644C58.5438 43.4518 56.8744 42.5709 55.7143 41.8037C54.5542 41.0365 52.8282 39.6725 51.9227 38.7347C50.989 37.8254 49.6308 36.092 48.8668 34.927C48.1029 33.7619 47.2257 32.0854 46.9145 31.2329C46.6032 30.3804 46.1222 28.9027 45.8675 27.965C45.5563 26.8 45.3865 25.1234 45.3865 22.708C45.3865 20.2926 45.5563 18.6161 45.8675 17.451C46.1222 16.5133 46.6032 15.0357 46.9145 14.1832C47.2257 13.3307 48.1312 11.6257 48.9234 10.4038C49.6874 9.21034 51.0739 7.50537 51.951 6.59606C52.8564 5.71515 54.5542 4.37959 55.7143 3.61236C56.8744 2.84512 58.5438 1.96422 59.3926 1.65164Z"
                  fill="white"
                />
                <path
                  d="M46.6598 53.6816C47.5087 52.9428 48.7254 52.0051 49.3196 51.5788C50.0835 51.0674 50.8192 50.84 51.6681 50.84C52.432 50.84 53.7053 51.2094 55.1484 51.8346C56.3933 52.3745 58.4023 53.0849 59.5907 53.3691C60.8074 53.6816 62.109 53.9658 63.2125 54.1079L63.4954 78.8868L64.3443 79.9666C64.8253 80.5633 65.6458 81.2453 66.1835 81.4727C66.8059 81.7284 67.6548 81.8137 68.4471 81.7284C69.1544 81.6432 70.0316 81.3306 70.3994 81.0464C70.7673 80.7623 71.3332 80.1655 71.6727 79.7393C72.2386 78.9436 72.2669 78.6026 72.5499 54.1647L74.389 53.7669C75.4077 53.568 77.0488 53.1133 78.0674 52.7723C79.086 52.4313 80.5291 51.863 81.3214 51.4936C82.1136 51.1242 83.302 50.84 84.0094 50.84C84.9431 50.84 85.5939 51.0389 86.4145 51.5788C87.037 52.0051 88.2537 52.9428 89.1025 53.6816C89.9514 54.4205 91.4793 56.0686 92.4979 57.3473C93.5165 58.6261 94.9313 60.7857 95.667 62.1497C96.4027 63.5136 97.393 65.7869 97.8457 67.1793C98.2984 68.5717 98.836 70.3619 99.0341 71.1576C99.2605 72.1522 99.4019 76.8124 99.5717 100H36.1906L36.3038 86.275C36.3604 76.8124 36.5019 72.1522 36.7282 71.1576C36.9263 70.3619 37.4639 68.5717 37.9166 67.1793C38.3693 65.7869 39.3597 63.5136 40.0953 62.1497C40.831 60.7857 42.2458 58.6261 43.2644 57.3473C44.283 56.0686 45.811 54.4205 46.6598 53.6816Z"
                  fill="white"
                />
                <path
                  d="M6.62221 61.2119C7.47106 60.3594 8.9707 59.1376 9.93274 58.5124C11.2343 57.6599 11.97 57.3758 12.8188 57.3758C13.4696 57.3758 14.6863 57.6031 15.5352 57.9157C16.384 58.1998 18.11 58.5976 19.355 58.7966C20.7415 59.0239 22.5524 59.1091 24.0237 58.9955C25.3536 58.9102 27.0796 58.6545 27.8436 58.4271C28.6358 58.1998 29.8525 57.8588 30.5882 57.6315C31.3239 57.4042 31.9746 57.2905 32.0595 57.3758C32.1444 57.461 31.72 58.5408 31.1258 59.7911C30.5316 61.0414 29.6827 63.0874 29.2866 64.3377C28.8622 65.588 28.268 67.8329 27.9284 69.3105C27.3625 71.8396 27.3059 72.9478 27.1362 100H2.80236L1.52908 98.7213C0.73682 97.9256 0.199212 97.1016 0.0860319 96.5048C0.00114647 96.0217 -0.0271487 90.5942 0.0294416 84.5132C0.114327 75.3348 0.227508 73.1751 0.595344 71.868C0.85 71.0155 1.33102 69.5947 1.64226 68.7422C1.95351 67.8897 2.85895 66.1848 3.65122 64.9629C4.41519 63.7694 5.77335 62.0644 6.62221 61.2119Z"
                  fill="white"
                />
                <path
                  d="M104.637 59.848C104.014 58.6545 103.533 57.6031 103.533 57.5178C103.533 57.4326 103.759 57.3758 104.042 57.3758C104.297 57.3758 105.089 57.5747 105.797 57.8304C106.504 58.0577 108.004 58.4556 109.135 58.6829C110.239 58.9102 112.05 59.0807 113.153 59.0807C114.257 59.0807 116.068 58.9102 117.2 58.6829C118.303 58.4556 119.803 58.0577 120.51 57.8304C121.217 57.5747 122.293 57.3758 122.915 57.3758C123.764 57.3758 124.5 57.6599 125.83 58.5124C126.792 59.1376 128.291 60.3594 129.14 61.2119C129.989 62.0644 131.347 63.7694 132.111 64.9629C132.903 66.1848 133.809 67.8897 134.12 68.7422C134.46 69.5947 134.941 71.2713 135.252 72.4363C135.733 74.3402 135.789 75.7042 135.789 85.4225C135.789 93.8053 135.705 96.5048 135.422 97.2152C135.195 97.7267 134.544 98.5792 132.818 100H108.626L108.541 85.9908C108.428 72.9194 108.4 71.8396 107.834 69.3105C107.494 67.8329 106.872 65.588 106.476 64.3377C106.051 63.0874 105.231 61.0699 104.637 59.848Z"
                  fill="white"
                />
                <path
                  d="M14.4034 20.2074C15.7332 19.5538 17.629 18.8434 18.6476 18.6161C19.6663 18.3888 21.3923 18.1899 22.4675 18.1899C23.5427 18.1899 25.3536 18.3603 26.4288 18.5877C27.504 18.815 29.4847 19.5538 30.8145 20.2074C32.5971 21.0883 33.7289 21.9408 35.2003 23.4184C36.2755 24.5267 37.662 26.2316 38.2562 27.2546C38.8504 28.2776 39.6143 30.011 39.9539 31.0908C40.4349 32.6537 40.5764 33.7619 40.5764 36.3478C40.5764 38.9337 40.4349 40.0419 39.9539 41.6048C39.6143 42.6846 38.8504 44.418 38.2562 45.441C37.662 46.4355 36.3604 48.1121 35.3418 49.1351C34.3231 50.158 32.6537 51.4652 31.6634 52.0619C30.6448 52.6587 29.0037 53.3975 27.985 53.7101C26.9664 54.0226 25.014 54.3636 23.5993 54.4489C21.9016 54.5436 20.3925 54.4489 19.0721 54.1647C17.9968 53.9374 16.1294 53.3122 14.9693 52.7439C13.8092 52.204 12.1115 51.1526 11.2343 50.4422C10.3289 49.7318 9.08388 48.4531 8.43309 47.6574C7.8106 46.8333 6.84857 45.242 6.31096 44.1622C5.77335 43.0824 5.15086 41.2638 4.9245 40.184C4.69814 39.1042 4.50007 37.3708 4.50007 36.3478C4.50007 35.3248 4.69814 33.5914 4.9245 32.5116C5.15086 31.4318 5.88653 29.4427 6.53732 28.1071C7.44277 26.2885 8.26332 25.1518 9.87615 23.5605C11.489 21.9124 12.5642 21.1167 14.4034 20.2074Z"
                  fill="white"
                />
                <path
                  d="M104.948 20.2074C106.278 19.5538 108.173 18.8434 109.192 18.6161C110.211 18.3888 111.908 18.1899 113.012 18.1899C114.115 18.1899 115.87 18.3603 116.973 18.5877C118.077 18.815 120.029 19.5538 121.359 20.2074C123.142 21.0883 124.273 21.9408 125.745 23.4184C126.848 24.5267 128.206 26.2316 128.801 27.2546C129.395 28.2776 130.159 30.011 130.498 31.0908C130.979 32.6537 131.121 33.7619 131.121 36.3478C131.121 38.9337 130.979 40.0419 130.498 41.6048C130.159 42.6846 129.395 44.418 128.801 45.441C128.206 46.4355 126.905 48.1121 125.886 49.1351C124.868 50.158 123.198 51.4652 122.208 52.0619C121.189 52.6587 119.548 53.3975 118.529 53.7101C117.511 54.0226 115.53 54.3636 114.144 54.4489C112.446 54.5436 110.937 54.4489 109.616 54.1647C108.513 53.9374 106.674 53.3122 105.514 52.7439C104.354 52.204 102.656 51.1526 101.779 50.4422C100.873 49.7318 99.6283 48.4531 98.9775 47.6574C98.355 46.8333 97.393 45.242 96.8554 44.1622C96.3178 43.0824 95.6953 41.2638 95.4689 40.184C95.2426 39.1042 95.0445 37.3708 95.0445 36.3478C95.0445 35.3248 95.2426 33.5914 95.4689 32.5116C95.6953 31.4318 96.431 29.4427 97.0817 28.1071C97.9872 26.2885 98.8077 25.1518 100.421 23.5605C102.033 21.9124 103.109 21.1167 104.948 20.2074Z"
                  fill="white"
                />
              </svg>
            </div>
            <div
              className="button"
              onClick={() => {
                setLocation("employee");
                fetchNui("get:timestamps").then((data: any) => {
                  transformData(data);
                });
              }}
            >
              Select
            </div>
            <div>Manage the whole Employee List</div>
          </div>
          <div
            style={{
              width: "25%",
              height: "100%",
              background:
                "linear-gradient(146.2deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.1) 100%)",
              marginRight: "3%",
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              justifyContent: "space-around",
            }}
          >
            <div className="title">RECRUIT</div>
            <div className="Icon">
              <svg
                style={{ width: "5.26vw", height: "9.259vh" }}
                viewBox="0 0 101 100"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M29.3147 0H76.8637V10.5882C76.8637 20.5882 76.8833 21.2157 77.2363 21.9216C77.4519 22.3333 77.9225 22.8235 78.3539 23.0784C79.1186 23.5098 79.1382 23.5098 100.393 23.5294V94.6078L99.7265 95.9804C99.3147 96.8235 98.7265 97.6471 98.2167 98.1176C97.7461 98.549 96.8049 99.1569 94.9029 100H29.4127L28.1774 99.451C27.5108 99.1569 26.5696 98.549 26.1186 98.1176C25.648 97.7059 25.001 96.8235 24.6872 96.1765C24.3147 95.451 24.0598 94.549 23.8833 92.6471L32.1382 84.4118L34.4519 85.1569C35.7265 85.5686 37.3735 86.0196 38.1382 86.1961C38.9225 86.3726 41.001 86.549 43.0402 86.6078C45.3147 86.6863 47.1578 86.6471 48.2363 86.4902C49.1578 86.3529 50.7461 86.0392 51.7657 85.7647C52.7853 85.5098 54.2363 85.0588 55.001 84.7647C55.7657 84.4902 56.9029 84 57.55 83.6667C58.197 83.3529 59.4323 82.6667 60.2951 82.1373C61.1578 81.6274 62.5696 80.6275 63.4323 79.9412C64.2951 79.2549 65.6284 78.0196 66.3735 77.2353C67.1382 76.4314 68.2559 75.1176 68.8441 74.3137C69.4519 73.5098 70.2363 72.3333 71.2755 70.5882H78.7657C85.8833 70.5882 86.3147 70.5686 87.0598 70.1961C87.5827 69.9346 87.9748 69.5425 88.2363 69.0196C88.4519 68.5882 88.6284 67.9608 88.6284 67.6471C88.6284 67.3333 88.4519 66.7059 88.2363 66.2745C87.9748 65.7516 87.5827 65.3595 87.0598 65.098C86.3147 64.7255 85.8833 64.7059 80.001 64.7059C74.1186 64.7059 73.7265 64.6863 73.8049 64.3726C73.8637 64.1765 74.0402 63.4902 74.197 62.8431C74.3539 62.1961 74.5304 61.2353 74.6088 60.6863C74.6676 60.1569 74.7657 59.5098 74.9029 58.8235H80.5892C85.8833 58.8235 86.3343 58.8039 87.0598 58.4314C87.5827 58.1699 87.9748 57.7778 88.2363 57.2549C88.4519 56.8235 88.6284 56.1961 88.6284 55.8824C88.6284 55.5686 88.4519 54.9412 88.2363 54.5098C87.9748 53.9869 87.5827 53.5948 87.0598 53.3333C86.3343 52.9608 85.8833 52.9412 74.9029 52.9412L74.8245 52.5098C74.7657 52.2549 74.6676 51.6275 74.6088 51.0784C74.5304 50.549 74.3539 49.5686 74.197 48.9216C74.0402 48.2745 73.8637 47.5882 73.8049 47.4118C73.7265 47.0784 74.1186 47.0588 80.001 47.0588C85.8833 47.0588 86.3147 47.0392 87.0598 46.6667C87.5827 46.4052 87.9748 46.0131 88.2363 45.4902C88.4519 45.0588 88.6284 44.451 88.6284 44.1176C88.6284 43.7843 88.4519 43.1765 88.2363 42.7451C87.9748 42.2222 87.5827 41.8301 87.0598 41.5686C86.3147 41.1961 85.8833 41.1765 71.2755 41.1765L70.197 39.451C69.6088 38.5098 68.6872 37.2157 67.2363 35.3922L76.9029 35.2941C85.6284 35.1961 86.6284 35.1569 87.197 34.8627C87.5696 34.6667 88.0206 34.1569 88.2363 33.7255C88.4519 33.2941 88.6284 32.6863 88.6284 32.3529C88.6284 32.0196 88.4519 31.4118 88.2363 30.9804C87.9748 30.4575 87.5827 30.0654 87.0598 29.8039C86.2951 29.4314 85.8833 29.4118 60.099 29.4314L58.4323 28.549C57.5108 28.0588 56.1578 27.4314 55.3931 27.1373C54.6284 26.8627 53.2755 26.4118 52.3539 26.1569C51.4323 25.8824 49.8833 25.549 48.9225 25.3922C47.9225 25.2157 45.8833 25.098 44.2167 25.098C42.5892 25.098 40.4323 25.2353 39.4127 25.3922C38.3931 25.549 36.8833 25.8627 36.0794 26.0784C35.2755 26.2941 33.9814 26.7255 33.2363 27C32.4716 27.2745 31.1186 27.8824 30.197 28.3529C29.2755 28.8235 27.9029 29.6078 27.1578 30.1176C26.3931 30.6078 25.3735 31.3725 23.9225 32.549L24.0206 5.19608L24.5304 4.11765C24.8049 3.52941 25.3735 2.64706 25.8049 2.17647C26.2755 1.66667 27.1186 1.07843 27.9421 0.666667L29.3147 0ZM37.1578 18.1176C36.7265 18.3922 36.2167 18.902 36.0402 19.2549C35.8637 19.6078 35.7068 20.1765 35.6872 20.5294C35.6872 20.8824 35.8637 21.5098 36.0598 21.902C36.2755 22.3333 36.7461 22.8235 37.1774 23.0784L37.9421 23.5098C68.2363 23.5294 68.648 23.5098 69.4127 23.1373C69.9356 22.8758 70.3278 22.4837 70.5892 21.9608C70.8049 21.5294 70.9814 20.902 70.9814 20.5882C70.9814 20.2549 70.8049 19.6471 70.5892 19.2157C70.3278 18.6928 69.9356 18.3007 69.4127 18.0392C68.648 17.6471 68.2363 17.6471 53.2755 17.6471H37.9421L37.1578 18.1176ZM67.4519 78.0196C67.2363 78.451 67.0598 79.0784 67.0598 79.3922C67.0598 79.7255 67.2363 80.3333 67.4519 80.7647C67.7134 81.2876 68.1055 81.6797 68.6284 81.9412C69.3735 82.3137 69.8049 82.3333 77.8441 82.3333C85.8833 82.3333 86.3147 82.3137 87.0598 81.9412C87.5827 81.6797 87.9748 81.2876 88.2363 80.7647C88.4519 80.3333 88.6284 79.7255 88.6284 79.3922C88.6284 79.0784 88.4519 78.451 88.2363 78.0196C87.9748 77.4967 87.5827 77.1046 87.0598 76.8431C86.3147 76.4706 85.8833 76.451 77.7853 76.4706C69.7657 76.4706 69.2755 76.4902 68.5696 76.8627C68.1186 77.098 67.7068 77.5294 67.4519 78.0196ZM18.8245 73.549C18.9814 73.8039 19.6088 74.6078 20.2167 75.3726C20.8245 76.1373 22.0598 77.451 22.9618 78.2941C23.8637 79.1373 25.1186 80.1961 26.8833 81.451L18.197 90.1373C10.7657 97.5882 9.3343 98.902 8.3343 99.3922C7.39312 99.8627 6.88332 99.9804 5.82449 99.9804C4.70685 99.9804 4.3343 99.8824 3.29508 99.3529C2.64802 99 1.82449 98.4118 1.51077 98.0196C1.17744 97.6471 0.746063 96.9412 0.530377 96.451C0.31469 95.9804 0.0990042 95 0.0401806 94.2941C-0.0578586 93.1961 0.00096488 92.8627 0.471553 91.8431C0.942141 90.8039 2.04018 89.6471 9.76567 81.8824C18.3735 73.2745 18.5304 73.1176 18.8245 73.549ZM82.8441 1.7451C82.9029 1.7451 86.4912 5.33333 98.7265 17.6275H82.7461V9.68627C82.7461 5.33333 82.7853 1.7451 82.8441 1.7451ZM44.7068 31.0588C47.8245 31.1176 48.5892 31.1961 50.197 31.6275C51.2167 31.902 52.7265 32.3922 53.5304 32.7255C54.3343 33.0588 55.5696 33.6471 56.2755 34.0392C56.9814 34.4118 58.2167 35.2353 59.0206 35.8235C59.8245 36.4314 61.0598 37.5098 61.7657 38.2157C62.4716 38.9216 63.4519 40.0196 63.9421 40.6667C64.4323 41.3137 65.197 42.4706 65.648 43.2157C66.099 43.9804 66.7657 45.2941 67.1186 46.1569C67.4912 47.0196 67.9225 48.2157 68.099 48.8039C68.2755 49.4118 68.55 50.6471 68.7068 51.549C68.9029 52.5686 69.0206 54.2941 69.0206 55.9216C69.0206 57.7647 68.9029 59.2157 68.648 60.5294C68.4519 61.5686 68.0794 63.0196 67.8441 63.7059C67.6088 64.4118 67.099 65.6863 66.6872 66.549C66.2951 67.4118 65.4127 68.9216 64.7657 69.8824C64.099 70.8627 63.2755 71.9216 62.9421 72.2353C62.3735 72.8039 62.3539 72.8235 62.3539 72.3922C62.3539 72.1373 62.1186 71.3137 61.8441 70.5294C61.5696 69.7451 61.0402 68.6275 60.6872 68.0196C60.3343 67.4314 59.6676 66.5098 59.2363 65.9608C58.7853 65.4314 57.9618 64.6078 57.3931 64.1373C56.8245 63.6863 55.8833 63.0196 55.2951 62.6863C54.7068 62.3529 54.1774 62.0588 54.1186 62.0196C54.0598 61.9804 54.2951 61.5294 54.648 61.0196C54.9814 60.5098 55.4912 59.6078 55.7657 59C56.0402 58.4118 56.3931 57.3137 56.5696 56.549C56.7265 55.8039 56.8637 54.6078 56.8637 53.902C56.8637 53.2157 56.7265 52.0196 56.5696 51.2549C56.4127 50.5098 55.9225 49.1373 55.4715 48.2157C54.8245 46.9216 54.2951 46.2157 53.0598 44.9608C51.8049 43.7255 51.1186 43.1961 49.8049 42.5686C48.8833 42.1176 47.5108 41.6078 46.7657 41.451C46.001 41.2941 44.8245 41.1765 44.1186 41.1765C43.4127 41.1765 42.2167 41.2941 41.4716 41.451C40.7068 41.6078 39.3539 42.1176 38.4323 42.5686C37.1186 43.1961 36.4323 43.7255 35.1774 44.9608C33.9421 46.2157 33.4127 46.9216 32.7657 48.2157C32.3147 49.1373 31.8245 50.5098 31.6676 51.2549C31.5108 52.0196 31.3735 53.2157 31.3735 53.902C31.3735 54.6078 31.5108 55.8039 31.6676 56.549C31.8441 57.3137 32.197 58.4118 32.4716 59C32.7461 59.6078 33.2559 60.5098 33.5892 61.0196C33.9421 61.5294 34.1774 61.9804 34.1186 62.0196C34.0598 62.0588 33.5696 62.3333 33.0402 62.6471C32.4912 62.9412 31.6676 63.5098 31.1774 63.8824C30.6872 64.2549 29.9617 64.9412 29.5304 65.3726C29.1186 65.8039 28.3735 66.7843 27.8833 67.5294C27.3931 68.2941 26.7461 69.5882 26.4323 70.4314C26.1382 71.2549 25.8833 72.1373 25.8833 72.3922C25.8833 72.8235 25.8637 72.8039 25.2951 72.2353C24.9618 71.9216 24.1382 70.8627 23.4716 69.8824C22.8245 68.9216 21.9421 67.4118 21.55 66.549C21.1382 65.6863 20.6284 64.4118 20.3931 63.7059C20.1578 63.0196 19.7853 61.5686 19.5892 60.5294C19.3343 59.1961 19.2167 57.7647 19.2167 55.8627C19.2167 53.9804 19.3343 52.5294 19.5892 51.2157C19.7853 50.1569 20.1578 48.7255 20.3931 48.0196C20.6284 47.3333 21.1382 46.0392 21.55 45.1765C21.9618 44.3137 22.6872 43 23.1774 42.2353C23.6872 41.4902 24.648 40.2157 25.3343 39.3922C26.0206 38.5882 27.3343 37.3333 28.2363 36.5882C29.1578 35.8627 30.5696 34.8824 31.3735 34.3922C32.1774 33.9216 33.55 33.2353 34.4127 32.8627C35.2755 32.4902 36.5108 32.0392 37.1578 31.8627C37.8049 31.6863 38.9421 31.4118 39.7068 31.2549C40.6872 31.0588 42.099 31 44.7068 31.0588V31.0588ZM44.4127 47.098C45.4716 47.1569 46.0794 47.2941 47.0598 47.7647C47.8049 48.1373 48.648 48.7451 49.099 49.2353C49.5304 49.7059 50.099 50.5686 50.3735 51.1569C50.8049 52.0588 50.8833 52.5294 50.8833 53.9216C50.8833 55.3922 50.8049 55.7255 50.2559 56.8627C49.9029 57.5882 49.2755 58.451 48.7853 58.902C48.3343 59.3137 47.4519 59.902 46.8637 60.1765C45.9814 60.5882 45.4912 60.6667 44.1186 60.6667C42.7461 60.6667 42.2559 60.5882 41.3735 60.1765C40.7853 59.902 39.9029 59.3137 39.4519 58.902C38.9618 58.451 38.3343 57.5882 37.9814 56.8627C37.4323 55.7255 37.3539 55.3922 37.3539 53.9216C37.3539 52.5294 37.4323 52.0588 37.8637 51.1569C38.1382 50.5686 38.6676 49.7451 39.0402 49.3333C39.4127 48.902 40.099 48.3333 40.5892 48.0588C41.0794 47.7843 41.8245 47.4314 42.2559 47.2941C42.6872 47.1569 43.648 47.0784 44.4127 47.098V47.098ZM43.9225 66.6667C46.5696 66.6667 49.197 66.7451 49.7461 66.8431C50.3147 66.9608 51.2951 67.2745 51.9029 67.5686C52.5892 67.8824 53.5108 68.5686 54.2167 69.2941C54.8637 69.9412 55.6284 70.9608 55.9225 71.549C56.2167 72.1765 56.6088 73.5686 56.8441 74.8824C57.1578 76.6471 57.197 77.1765 57.001 77.2941C56.8833 77.3726 56.099 77.7843 55.2951 78.1961C54.4912 78.6274 53.1186 79.1961 52.2559 79.4902C51.3931 79.7843 49.8245 80.1961 48.7657 80.3922C47.4716 80.6471 46.001 80.7647 44.1578 80.7647C42.6676 80.7647 40.7265 80.6471 39.8049 80.4902C38.8833 80.3333 37.4323 79.9608 36.5696 79.6863C35.7069 79.4118 34.197 78.7843 33.2363 78.3137C32.2755 77.8431 31.3539 77.3726 31.2363 77.2941C31.0402 77.1765 31.0794 76.6471 31.3931 74.8824C31.6284 73.5686 32.0206 72.1765 32.3147 71.549C32.6088 70.9608 33.3735 69.9412 34.0206 69.2941C34.7265 68.5882 35.6676 67.902 36.3735 67.549C37.0206 67.2549 37.9029 66.9216 38.3343 66.8431C38.7657 66.7647 41.2755 66.6863 43.9225 66.6667V66.6667Z"
                  fill="white"
                />
              </svg>
            </div>
            <div
              className="button"
              onClick={() => {
                setLocation("hire");
                fetchApplications();
              }}
            >
              Select
            </div>
            <div>Recruit new business members</div>
          </div>
          <div
            style={{
              width: "25%",
              height: "100%",
              background:
                "linear-gradient(146.2deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.1) 100%)",
              marginRight: "3%",
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              justifyContent: "space-around",
            }}
          >
            <div className="title">INVENTORY</div>
            <div className="Icon">
              <svg
                style={{ width: "5.208vw", height: "9.259vh" }}
                viewBox="0 0 100 100"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M27.4219 1.79688C27.5586 1.50391 28.0273 0.976562 28.4375 0.625L29.1992 0H45.9375L45.9961 14.0039L46.5234 14.7656C46.8164 15.1758 47.3828 15.7422 47.793 16.0156C48.3984 16.4258 48.7305 16.5039 50 16.5039C51.2695 16.5039 51.6016 16.4258 52.207 16.0156C52.6172 15.7422 53.1836 15.1758 54.0039 14.0039L54.043 0L70.8008 0.0195312L71.4453 0.488281C71.7773 0.761719 72.2461 1.26953 72.4609 1.60156C72.8514 2.22628 72.8516 2.59732 72.8711 43.5967L72.8711 43.6523L72.4219 44.3164C72.168 44.6875 71.6602 45.1758 71.2891 45.3906C70.6063 45.8003 70.3912 45.8008 29.9388 45.8981L29.7852 45.8984L28.9062 45.4688C28.418 45.2148 27.832 44.707 27.1289 43.6523L27.1484 22.9883C27.1484 5.99609 27.1875 2.24609 27.4219 1.79688Z"
                  fill="white"
                />
                <path
                  d="M1.28906 54.7852C1.60156 54.5898 2.07031 54.3555 2.34375 54.2773C2.61719 54.1992 6.40625 54.1211 18.75 54.082V67.4609L19.2773 68.5352C19.6094 69.1602 20.0977 69.7852 20.5078 70.0391C20.8789 70.293 21.582 70.5859 22.0703 70.7031C22.7148 70.8594 23.2031 70.8398 23.9258 70.6641C24.6484 70.4883 25.1367 70.1953 25.8008 69.5312C26.4258 68.9062 26.7578 68.3789 26.9141 67.7148C27.0703 67.0898 27.1484 64.6875 27.1484 54.082H35C39.3359 54.1016 43.1836 54.1797 43.5547 54.2773C43.9453 54.375 44.5508 54.8047 44.9609 55.2539C45.4883 55.8203 45.7227 56.2695 45.8008 56.875C45.8594 57.3242 45.8984 66.7188 45.8008 97.7344L45.3906 98.418C45.1562 98.8086 44.6484 99.3164 43.5547 99.9805L2.05078 100L1.28906 99.3555C0.859375 99.0039 0.390625 98.4375 0.253906 98.0859C0.0390625 97.5781 0 93.5352 0 77.0312C0 57.5195 0.0195312 56.6016 0.371094 55.8984C0.566406 55.4883 0.976562 55 1.28906 54.7852Z"
                  fill="white"
                />
                <path
                  d="M54.9414 55.2539C55.332 54.7852 55.8398 54.4141 56.25 54.2969C56.6211 54.1992 60.5078 54.1211 72.8516 54.082V60.4297C72.8516 64.6875 72.9297 67.0898 73.0859 67.7148C73.2422 68.3789 73.5742 68.9062 74.1992 69.5312C74.8633 70.1953 75.3516 70.4883 76.0742 70.6641C76.7773 70.8398 77.2852 70.8594 77.9297 70.7031C78.418 70.5859 79.1211 70.293 79.4922 70.0391C79.9023 69.7852 80.3906 69.1602 81.25 67.4609L81.3281 54.082L89.5508 54.1406C97.6562 54.1797 97.7539 54.1992 98.4766 54.6289C98.9062 54.8828 99.375 55.4102 99.6094 55.8398C100 56.6211 100 57.0117 100 77.0312C100 93.5352 99.9414 97.5781 99.7461 98.0859C99.5898 98.4375 99.1406 99.0039 97.9492 100L56.4453 99.9805L55.7031 99.5117C55.3125 99.2383 54.8047 98.7305 54.5898 98.3789C54.2004 97.7559 54.1992 97.3463 54.1412 77.8997L54.1406 77.7148C54.1016 66.7188 54.1211 57.3242 54.1797 56.875C54.2578 56.3281 54.5117 55.7812 54.9414 55.2539Z"
                  fill="white"
                />
              </svg>
            </div>
            <div
              className="button"
              onClick={() => {
                fetchNui("OpenBossInventory", true).then((data) => {
                  fetchNui("hideFrame", false);
                });
              }}
            >
              Select
            </div>
            <div>Access the business inventory</div>
          </div>
          <div
            style={{
              width: "25%",
              height: "100%",
              background:
                "linear-gradient(146.2deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.1) 100%)",
              marginRight: "3%",
              display: "flex",
              flexDirection: "column",
              alignItems: "center",
              justifyContent: "space-around",
            }}
          >
            <div className="title">OUTFITS</div>
            <div className="Icon">
              <svg
                style={{ width: "5.208vw", height: "9.259vh" }}
                viewBox="0 0 100 100"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M39.1406 0H60.8398L58.3008 14.1602H41.6992L39.1406 0ZM25.957 7.28516C26.1523 7.30469 30.0977 18.9453 38.0273 42.7344C44.5117 62.1875 49.9023 78.125 50 78.125C50.1172 78.125 55.4883 62.2461 61.9336 42.832C68.3984 23.3984 73.7305 7.44141 73.8086 7.36328C73.8672 7.26562 79.6484 8.75 86.6211 10.6445C93.6133 12.5391 99.4727 14.1211 99.668 14.1797C99.9805 14.2578 100 16.4648 100 100H0V14.2578L0.449219 14.1602C0.683594 14.1016 6.46484 12.5195 13.2812 10.6445C20.0977 8.76953 25.8008 7.26562 25.957 7.28516ZM71.4844 50H92.7734V42.7734H71.4844V50ZM42.793 21.4844H57.2266L57.3242 22.0312C57.3633 22.3242 57.5977 24.4922 58.2812 31.1523L54.1797 43.418C51.9336 50.1562 50.0586 55.6641 50 55.6641C49.9414 55.6641 48.0664 50.1562 41.7188 31.1523L42.168 26.8555C42.4023 24.4922 42.6367 22.3242 42.6953 22.0312L42.793 21.4844Z"
                  fill="white"
                />
              </svg>
            </div>
            <div
              className="button"
              onClick={() => {
                fetchNui("OpenBossOutfits", true).then((data) => {
                  fetchNui("hideFrame", false);
                });
              }}
            >
              Select
            </div>
            <div>Edit the business outfits</div>
          </div>
        </>
      ) : location === "employee" ? (
        <>
          <div
            style={{
              width: "100%",
            }}
          >
            <ScrollArea
              h={"50vh"}
              style={{
                width: "100%",
              }}
            >
              {employeeData.map((employee, index) => {
                return (
                  <div
                    style={{
                      display: "flex",
                      background:
                        "linear-gradient(146.2deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.1) 100%)",
                      justifyContent: "center",
                      alignItems: "center",
                    }}
                  >
                    <div
                      style={{
                        display: "flex",
                        justifyContent: "space-between",
                      }}
                      key={index}
                    >
                      <div
                        className="text"
                        style={{
                          marginRight: "0.5vw",
                          fontSize: "1.7vh",
                        }}
                      >
                        {employee?.name}
                      </div>
                      <div
                        className="text"
                        style={{
                          marginTop: "-0.1vh",
                        }}
                      >
                        {employee?.online ? (
                          <svg
                            style={{ width: "0.417vw", height: "0.741vh" }}
                            viewBox="0 0 8 8"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <circle
                              cx="4"
                              cy="4"
                              r="4"
                              transform="matrix(-1 0 0 1 8 0)"
                              fill="url(#paint0_radial_814_1670)"
                            />
                            <defs>
                              <radialGradient
                                id="paint0_radial_814_1670"
                                cx="0"
                                cy="0"
                                r="1"
                                gradientUnits="userSpaceOnUse"
                                gradientTransform="translate(8 8) rotate(-135) scale(11.3137 84.4506)"
                              >
                                <stop stopColor="#00923A" />
                                <stop offset="1" stopColor="#34E97C" />
                              </radialGradient>
                            </defs>
                          </svg>
                        ) : (
                          <svg
                            style={{ width: "0.417vw", height: "0.741vh" }}
                            viewBox="0 0 8 8"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <circle
                              cx="4"
                              cy="4"
                              r="4"
                              transform="matrix(-1 0 0 1 8 0)"
                              fill="url(#paint0_radial_814_1715)"
                            />
                            <defs>
                              <radialGradient
                                id="paint0_radial_814_1715"
                                cx="0"
                                cy="0"
                                r="1"
                                gradientUnits="userSpaceOnUse"
                                gradientTransform="translate(8 8) rotate(-135) scale(11.3137 84.4506)"
                              >
                                <stop stopColor="#B20222" />
                                <stop offset="1" stopColor="#FF2C52" />
                              </radialGradient>
                            </defs>
                          </svg>
                        )}
                      </div>
                      <div
                        className="text"
                        style={{
                          marginLeft: "0.5vw",
                          display: "flex",
                          justifyContent: "center",
                          alignItems: "center",
                          textAlign: "center",
                          gap: "0.926vh",
                          padding: "0.5vh",
                          height: "2.2vh",
                          background: "#FFFFFF",
                          borderRadius: "1vw",
                          color: "#000000",
                          fontSize: "1.3vh",
                          fontWeight: 700,
                          textTransform: "uppercase",
                        }}
                      >
                        {employee?.grade?.name}
                      </div>
                    </div>
                    <div style={{ width: "40%" }}></div>
                    <div
                      style={{
                        width: "37%",
                        marginTop: "1vh",
                        marginBottom: "1vh",
                        display: "flex",
                        justifyContent: "space-evenly",
                        alignItems: "center",
                      }}
                    >
                      <div
                        className="bout1"
                        onClick={() => {
                          if (employee.isboss) {
                            notifications.show({
                              title: "Error",
                              message: "You cannot update your Rank!",
                              color: "red",
                              autoClose: 5000,
                            });
                            return;
                          }
                          fetchNui("downGrade", employee?.empSource);
                        }}
                      >
                        Downrank
                      </div>
                      <div
                        className="bout1"
                        onClick={() => {
                          if (employee.isboss) {
                            notifications.show({
                              title: "Error",
                              message: "You cannot update your Rank!",
                              color: "red",
                              autoClose: 5000,
                            });
                            return;
                          }
                          fetchNui("upGrade", employee?.empSource);
                        }}
                      >
                        Uprank
                      </div>
                      <div
                        className="bout1"
                        onClick={() => {
                          if (employee.isboss) {
                            notifications.show({
                              title: "Error",
                              message: "You cannot fire yourself!",
                              color: "red",
                              autoClose: 5000,
                            });
                            return;
                          }
                          fetchNui("fireEmployee", employee?.empSource);
                        }}
                      >
                        Fire
                      </div>
                      <div
                        className="bout2"
                        onClick={() => {
                          fetchRanks(employee);
                          setEmpSource(employee.empSource);
                        }}
                      >
                        Manage
                      </div>
                    </div>
                  </div>
                );
              })}
            </ScrollArea>
          </div>
          {manager?.name && (
            <div
              className="ranks"
              style={{
                width: "28%",
                display: "flex",
                flexDirection: "column",
                justifyContent: "center",
                alignItems: "center",
                background:
                  "linear-gradient(146.2deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.1) 100%)",
                marginLeft: "2%",
              }}
            >
              <div
                className="text2"
                style={{
                  fontWeight: 700,
                  fontSize: "24px",
                  textAlign: "center",
                  letterSpacing: "0.68em",
                  textTransform: "uppercase",
                }}
              >
                {manager.name}
              </div>
              <ScrollArea h={300}>
                {Object.keys(ranks).map((key, index) => {
                  const rank = ranks[key];
                  return (
                    <div
                      className="rank"
                      style={{
                        boxSizing: "border-box",
                        display: "flex",
                        flexDirection: "row",
                        justifyContent: "center",
                        alignItems: "center",
                        padding: "15px 20px",
                        gap: "15px",
                        margin: "1vh auto",
                        width: "231px",
                        height: "40px",
                        border: "1px solid #FFFFFF",
                        borderRadius: "100px",
                      }}
                      key={index}
                      onClick={() => {
                        fetchNui("SetRank", { rank: index, source: empSource });
                      }}
                    >
                      {rank.name}
                    </div>
                  );
                })}
              </ScrollArea>
              <div className="MinText">Manage : {manager.name}</div>
            </div>
          )}
        </>
      ) : location === "hire" ? (
        <>
          <div
            style={{
              width: "100%",
            }}
          >
            <ScrollArea
              h={"50vh"}
              style={{
                width: "100%",
              }}
            >
              {jobdata.map((job: any, index: number) => {
                return (
                  <div
                    key={index}
                    style={{
                      display: "flex",
                      marginBottom: "1vh",
                      background:
                        "linear-gradient(146.2deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.1) 100%)",
                      justifyContent: "center",
                      alignItems: "center",
                    }}
                  >
                    <div
                      style={{
                        display: "flex",
                        justifyContent: "space-between",
                      }}
                      key={index}
                    >
                      <div
                        className="text"
                        style={{
                          marginRight: "0.5vw",
                          fontSize: "1.7vh",
                        }}
                      >
                        {job?.name}
                      </div>
                      <div
                        className="text"
                        style={{
                          marginTop: "-0.1vh",
                        }}
                      >
                        <svg
                          style={{ width: "0.417vw", height: "0.741vh" }}
                          viewBox="0 0 8 8"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle
                            cx="4"
                            cy="4"
                            r="4"
                            transform="matrix(-1 0 0 1 8 0)"
                            fill="url(#paint0_radial_814_1670)"
                          />
                          <defs>
                            <radialGradient
                              id="paint0_radial_814_1670"
                              cx="0"
                              cy="0"
                              r="1"
                              gradientUnits="userSpaceOnUse"
                              gradientTransform="translate(8 8) rotate(-135) scale(11.3137 84.4506)"
                            >
                              <stop stopColor="#00923A" />
                              <stop offset="1" stopColor="#34E97C" />
                            </radialGradient>
                          </defs>
                        </svg>
                      </div>
                      <div
                        className="text"
                        style={{
                          marginLeft: "0.5vw",
                          display: "flex",
                          justifyContent: "center",
                          alignItems: "center",
                          textAlign: "center",
                          gap: "0.926vh",
                          padding: "0.5vh",
                          height: "2.2vh",
                          background: "#FFFFFF",
                          borderRadius: "1vw",
                          color: "#000000",
                          fontSize: "1.3vh",
                          fontWeight: 700,
                          textTransform: "uppercase",
                        }}
                      >
                        {job?.gender}
                      </div>
                      <div
                        className="text"
                        style={{
                          marginLeft: "0.5vw",
                          display: "flex",
                          justifyContent: "center",
                          alignItems: "center",
                          textAlign: "center",
                          gap: "0.926vh",
                          padding: "0.5vh",
                          height: "2.2vh",
                          background: "#FFFFFF",
                          borderRadius: "1vw",
                          color: "#000000",
                          fontSize: "1.3vh",
                          fontWeight: 700,
                          textTransform: "uppercase",
                        }}
                      >
                        {job?.citizenid}
                      </div>
                      <div
                        className="text"
                        style={{
                          marginLeft: "0.5vw",
                          display: "flex",
                          justifyContent: "center",
                          alignItems: "center",
                          textAlign: "center",
                          gap: "0.926vh",
                          padding: "0.5vh",
                          height: "2.2vh",
                          background: "#FFFFFF",
                          borderRadius: "1vw",
                          color: "#000000",
                          fontSize: "1.3vh",
                          fontWeight: 700,
                          textTransform: "uppercase",
                        }}
                      >
                        {job?.date}
                      </div>
                    </div>
                    <div style={{ width: "50%" }}></div>
                    <div
                      style={{
                        width: "18%",
                        marginTop: "1vh",
                        marginBottom: "1vh",
                        display: "flex",
                        justifyContent: "space-evenly",
                        alignItems: "center",
                      }}
                    >
                      <div
                        className="bout1"
                        onClick={() => {
                          fetchNui("DeclineJob", job?.id).then(() => {
                            fetchApplications();
                            setHjob({});
                          });
                        }}
                      >
                        Decline
                      </div>
                      <div
                        className="bout1"
                        onClick={() => {
                          setHjob(job);
                        }}
                      >
                        View
                      </div>
                    </div>
                  </div>
                );
              })}
            </ScrollArea>
          </div>
          {hjob?.name && (
            <div
              className="ranks"
              style={{
                width: "28%",
                display: "flex",
                flexDirection: "column",
                justifyContent: "center",
                alignItems: "center",
                background:
                  "linear-gradient(146.2deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.1) 100%)",
                marginLeft: "2%",
              }}
            >
              <div
                className="text2"
                style={{
                  fontWeight: 700,
                  fontSize: "24px",
                  textAlign: "center",
                  letterSpacing: "0.68em",
                  textTransform: "uppercase",
                }}
              >
                {hjob.name}
              </div>
              <div
                style={{
                  display: "flex",
                  flexDirection: "row",
                  justifyContent: "center",
                  alignItems: "center",
                  padding: "15px 25px",
                  gap: "10px",

                  width: "90%",

                  color: "#000000",
                  background: "#FFFFFF",
                  borderRadius: "15px 15px 15px 0px",
                }}
              >
                <ScrollArea h={70}>{hjob.reason}</ScrollArea>
              </div>
              <div
                className="rank"
                style={{
                  boxSizing: "border-box",
                  display: "flex",
                  flexDirection: "row",
                  justifyContent: "center",
                  alignItems: "center",
                  padding: "15px 20px",
                  gap: "15px",

                  margin: "1vh auto",
                  width: "231px",
                  height: "40px",

                  border: "1px solid #FFFFFF",
                  borderRadius: "100px",
                }}
                onClick={() => {}}
              >
                Gender : {hjob?.gender}
              </div>
              <div
                className="rank"
                style={{
                  boxSizing: "border-box",
                  display: "flex",
                  flexDirection: "row",
                  justifyContent: "center",
                  alignItems: "center",
                  padding: "15px 20px",
                  gap: "15px",

                  margin: "1vh auto",
                  width: "231px",
                  height: "40px",

                  border: "1px solid #FFFFFF",
                  borderRadius: "100px",
                }}
                onClick={() => {}}
              >
                ID : {hjob?.id}
              </div>
              <div
                className="rank"
                style={{
                  boxSizing: "border-box",
                  display: "flex",
                  flexDirection: "row",
                  justifyContent: "center",
                  alignItems: "center",
                  padding: "15px 20px",
                  gap: "15px",

                  margin: "1vh auto",
                  width: "231px",
                  height: "40px",

                  border: "1px solid #FFFFFF",
                  borderRadius: "100px",
                }}
                onClick={() => {}}
              >
                Date : {hjob?.date}
              </div>
              <div
                className="rank"
                style={{
                  boxSizing: "border-box",
                  display: "flex",
                  flexDirection: "row",
                  justifyContent: "center",
                  alignItems: "center",
                  padding: "15px 20px",
                  gap: "15px",

                  margin: "1vh auto",
                  width: "231px",
                  height: "40px",

                  border: "1px solid #FFFFFF",
                  borderRadius: "100px",
                }}
                onClick={() => {}}
              >
                Citizen ID : {hjob?.citizenid}
              </div>
              <div
                style={{
                  width: "80%",
                  marginTop: "1vh",
                  marginBottom: "1vh",
                  display: "flex",
                  justifyContent: "space-evenly",
                  alignItems: "center",
                }}
              >
                <div
                  className="bout11"
                  onClick={() => {
                    fetchNui("DeclineJob", hjob?.id).then(() => {
                      fetchApplications();
                      setHjob({});
                    });
                  }}
                >
                  Reject
                </div>
                <div
                  className="bout11"
                  onClick={() => {
                    fetchNui("Acceptemployee", {
                      citizen: hjob?.citizenid,
                      id: hjob?.id,
                    }).then(() => {
                      fetchApplications();
                      setHjob({});
                    });
                  }}
                >
                  Accept
                </div>
              </div>
              <div className="MinText">Manage : {hjob.name}</div>
            </div>
          )}
        </>
      ) : location === "clientbills" ? (
        <>
          <div
            style={{
              width: "100%",
              display: "flex",
              flexWrap: "wrap",
              height: "55vh",
              overflowY: "auto",
            }}
          >
            {billdata?.data?.map((bill: any, index: number) => {
              return (
                <BackgroundImage
                  key={index}
                  src="https://raw.githubusercontent.com/PH-Studios/static_assets/da51994f06c44229b58c1b6221e2272c4b908170/tickets.svg"
                  w={"18.229vw"}
                  h={"25.926vh"}
                  style={{
                    display: "flex",
                    justifyContent: "start",
                    flexDirection: "column",
                    alignItems: "center",
                    marginRight: "0.3vw",
                    marginBottom: "0.5vh",
                    flexWrap: "wrap",
                  }}
                >
                  <div
                    className="head"
                    style={{
                      width: "70%",
                      height: "30%",
                      display: "flex",
                      justifyContent: "space-between",
                      alignContent: "center",
                      alignItems: "center",
                      color: "black",
                    }}
                  >
                    <div style={{ display: "flex", flexDirection: "column" }}>
                      <div
                        style={{
                          fontWeight: 600,
                          fontSize: "2vh",
                          marginBottom: "-1.0vh",
                        }}
                      >
                        Bill no. {bill?.id}
                      </div>
                      <div>{bill.job}</div>
                    </div>
                    <div
                      style={{
                        fontWeight: 600,
                        fontSize: "2vh",
                        color: "white",
                        background:
                          "radial-gradient(100% 1392.89% at 100% 100%, #B20222 0%, #FF2C52 100%)",
                        padding: "0.5vh 1vw",
                      }}
                    >
                      $ {bill?.amount}
                    </div>
                  </div>
                  <div
                    style={{
                      fontWeight: 600,
                      width: "13vw",
                      background: "rgba(21, 21, 21, 0.08)",
                      color: "black",
                      display: "flex",
                      justifyContent: "space-between",
                      marginBottom: "0.5vh",
                    }}
                  >
                    <div>Received</div>
                    <div>{bill?.rcdate}</div>
                  </div>
                  <div
                    style={{
                      fontWeight: 600,
                      width: "13vw",
                      background: "rgba(21, 21, 21, 0.08)",
                      color: "black",
                      display: "flex",
                      justifyContent: "space-between",
                      marginBottom: "0.5vh",
                    }}
                  >
                    <div>Until</div>
                    <div>{bill?.untildate}</div>
                  </div>
                  <div
                    style={{
                      fontWeight: 600,
                      width: "13vw",
                      background: "rgba(21, 21, 21, 0.08)",
                      color: "black",
                      display: "flex",
                      justifyContent: "space-between",
                      marginBottom: "0.5vh",
                    }}
                  >
                    <div>From</div>
                    <div>{bill?.fromname}</div>
                  </div>
                  <div
                    style={{
                      fontWeight: 600,
                      width: "13vw",
                      background: "rgba(21, 21, 21, 0.08)",
                      color: "black",
                      display: "flex",
                      justifyContent: "space-between",
                      marginBottom: "3.5vh",
                    }}
                  >
                    <div>To</div>
                    <div>{bill?.toname}</div>
                  </div>
                  <div
                    style={{
                      fontWeight: 600,
                      width: "13vw",
                      color: "black",
                      display: "flex",
                      justifyContent: "center",
                      cursor: "pointer",
                      marginBottom: "0.5vh",
                    }}
                    onClick={async () => {
                      fetchNui("PayBill", bill);
                      const updatedBilldata = {
                        pdata: {
                          bank: billdata.pdata.bank - bill.amount,
                          cash: billdata.pdata.cash,
                          crypto: billdata.pdata.crypto,
                        },
                        data: billdata.data.filter(
                          (item: any) => item.id !== bill.id,
                        ),
                      };
                      setSecondary(updatedBilldata.data);
                      setBilldata(updatedBilldata);
                    }}
                  >
                    PAY INVOICE
                  </div>
                </BackgroundImage>
              );
            })}
          </div>
        </>
      ) : location === "manageBills" ? (
        <>
          <div
            style={{
              width: "100%",
              display: "flex",
              flexWrap: "wrap",
              height: "55vh",
              overflowY: "auto",
            }}
          >
            {billdata?.data?.map((bill: any, index: number) => {
              return (
                <div
                  key={index}
                  style={{
                    width: "18.229vw",
                    height: "25.926vh",
                    display: "flex",
                    background:
                      "linear-gradient(146.2deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.1) 100%)",
                    justifyContent: "start",
                    flexDirection: "column",
                    alignItems: "center",
                    marginRight: "0.3vw",
                    marginBottom: "0.5vh",
                    flexWrap: "wrap",
                  }}
                >
                  <div
                    className="head"
                    style={{
                      width: "70%",
                      height: "30%",
                      display: "flex",
                      justifyContent: "space-between",
                      alignContent: "center",
                      alignItems: "center",
                      color: "white",
                    }}
                  >
                    <div style={{ display: "flex", flexDirection: "column" }}>
                      <div
                        style={{
                          fontWeight: 600,
                          fontSize: "2vh",
                          marginBottom: "-1.0vh",
                        }}
                      >
                        Bill no. {bill?.id}
                      </div>
                      <div
                        style={{
                          color: "rgba()",
                        }}
                      >
                        {bill.job}
                      </div>
                    </div>
                    <div
                      style={{
                        fontWeight: 500,
                        fontSize: "2vh",
                        color: "white",
                        background:
                          "radial-gradient(100% 1392.89% at 100% 100%, #B20222 0%, #FF2C52 100%)",
                        padding: "0.5vh 1vw",
                      }}
                    >
                      $ {bill?.amount}
                    </div>
                  </div>
                  <div
                    style={{
                      fontWeight: 500,
                      width: "13vw",
                      background: "rgba(255, 255, 255, 0.05)",
                      color: "white",
                      display: "flex",
                      justifyContent: "space-between",
                      marginBottom: "0.5vh",
                    }}
                  >
                    <div>Received</div>
                    <div>{bill?.rcdate}</div>
                  </div>
                  <div
                    style={{
                      fontWeight: 500,
                      width: "13vw",
                      background: "rgba(255, 255, 255, 0.05)",
                      color: "white",
                      display: "flex",
                      justifyContent: "space-between",
                      marginBottom: "0.5vh",
                    }}
                  >
                    <div>Until</div>
                    <div>{bill?.untildate}</div>
                  </div>
                  <div
                    style={{
                      fontWeight: 500,
                      width: "13vw",
                      background: "rgba(255, 255, 255, 0.05)",
                      color: "white",
                      display: "flex",
                      justifyContent: "space-between",
                      marginBottom: "0.5vh",
                    }}
                  >
                    <div>From</div>
                    <div>{bill?.fromname}</div>
                  </div>
                  <div
                    style={{
                      fontWeight: 500,
                      width: "13vw",
                      background: "rgba(255, 255, 255, 0.05)",
                      color: "white",
                      display: "flex",
                      justifyContent: "space-between",
                      marginBottom: "2.5vh",
                    }}
                  >
                    <div>To</div>
                    <div>{bill?.toname}</div>
                  </div>
                  <div
                    style={{
                      fontWeight: 600,
                      width: "13vw",
                      color: "black",
                      display: "flex",
                      justifyContent: "center",
                      alignItems: "center",
                      cursor: "pointer",
                      backgroundColor: "white",
                      borderRadius: "1vw",
                      padding: "0.8vh 1vw",
                    }}
                    onClick={async () => {
                      fetchNui("PayBill", bill);
                      const updatedBilldata = {
                        pdata: {
                          bank: billdata.pdata.bank - bill.amount,
                          cash: billdata.pdata.cash,
                          crypto: billdata.pdata.crypto,
                        },
                        data: billdata.data.filter(
                          (item: any) => item.id !== bill.id,
                        ),
                      };
                      setSecondary(updatedBilldata.data);
                      setBilldata(updatedBilldata);
                    }}
                  >
                    PAY INVOICE
                  </div>
                </div>
              );
            })}
          </div>
        </>
      ) : (
        <></>
      )}
    </div>
  );
}
